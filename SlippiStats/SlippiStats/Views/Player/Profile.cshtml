@model PlayerProfileViewModel

@{
    ViewData["Title"] = "Player List Page";
}

<div class="section-filters">
    <h3>Stats Overview - @Model.Player.Name - @Model.Player.ConnectCode</h3>
    <form class="form-standard" method="post" id="filterForm">
        <input id="opponentFilter" name="opponentFilter" placeholder="Opponent Tag or Code" value="@Model.OpponentFilter" />
        <input id="characterFilter" name="character" hidden />
        <input id="opponentCharacterFilter" name="opponentCharacter" hidden />
        <button class="button" type="submit">Filter</button>
    </form>
</div>

<div class="profile-overview">
    <div class="profile-header">
        <div class="profile-header-content">
            <h2>@Model.Player.Name (@Model.Player.ConnectCode)</h2>
            @if (Model.Player.DiscordCode != null) {
                <h7><img src="/images/media_icons/DiscordIcon.png" /> @Model.Player.DiscordCode</h7>
            }
        </div>
        <hr class="profile-header-row" />
        @if (Model.PlayerProfile.CharacterFilter != null) {
            <img src="@Model.PlayerProfile.CharacterFilter.GetStockIconPath()" />
            if (Model.PlayerProfile.OpponentCharacterFilter != null) {
                <text>vs </text><img src="@Model.PlayerProfile.OpponentCharacterFilter.GetStockIconPath()" />
            }
            else {
                <text>vs ALL</text>
            }
        }
        else if (Model.PlayerProfile.OpponentCharacterFilter != null) {
            <text>ALL vs </text><img src="@Model.PlayerProfile.OpponentCharacterFilter.GetStockIconPath()" />
        }
        <div class="profile-header-content">
            <h5>Games Played: @Model.PlayerProfile.GamesPlayed</h5>
            @if (Model.PlayerProfile.GamesPlayed > 0) {
                <h5>Games Won: @Model.PlayerProfile.GamesWon (@(Model.PlayerProfile.GamesPlayed > 0 ? (100 * Model.PlayerProfile.GamesWon / (decimal)Model.PlayerProfile.GamesPlayed).ToString("#.##") : "0")%)</h5>
                <h5>Winrate: @(Model.PlayerProfile.GamesPlayed > 0 ? (100 * Model.PlayerProfile.GamesWon / (decimal)Model.PlayerProfile.GamesPlayed).ToString("#.##") : "0")% (@Model.PlayerProfile.GamesWon / @Model.PlayerProfile.GamesPlayed)</h5>
                <span>
                    <h6>LRAS: @Model.PlayerProfile.LRASCount</h6>
                    <h6>Opp. LRAS: @Model.PlayerProfile.OpponentLRASCount</h6>
                </span>
                <h5>Total Playtime: @Model.PlayerProfile.FramesPlayed.ToString("N0") frames (@(Model.PlayerProfile.FramesPlayed / 60 / 60 / 60) hours)</h5>
                @if (Model.PlayerProfile.CharacterFilter == null) {
                    <h5>Favorite Character: <img src="@Model.PlayedCharacters.First().GetStockIconPath()" /></h5>
                }
                @if (Model.PlayerProfile.FavoriteOpponent != null) {
                    <h5>Favorite Opponent: <label class="player-profile-opponent-name" onclick="goToProfile('@Model.PlayerProfile.FavoriteOpponent.Id')">@Model.PlayerProfile.FavoriteOpponent.Name (@Model.PlayerProfile.FavoriteOpponent.ConnectCode)</label></h5>
                }
                <h5>Unique Opponents: @Model.PlayerProfile.UniqueOpponents</h5>
                <h5>4-Stocks: @Model.PlayerProfile.FourStocks</h5>
            }
        </div>
        <hr class="profile-header-row" />
        <div class="profile-header-content">
            @if (Model.PlayerProfile.GamesPlayed > 0) {
                <h6>First Spotted: @Model.PlayerProfile.FirstSpotted</h6>
            }
        </div>
    </div>
    <div class="profile-matchups">
        <table class="table-matchups">
            <thead>
                <tr>
                    <th onclick="clearFilter()" onmouseover="hoverTable()" onmouseout="unhoverTable()" />
                    <th onclick="clearFilter()" onmouseover="hoverTable()" onmouseout="unhoverTable()" />
                    @{int i = 3;}
                    @foreach (Character character in Model.Characters)
                    {
                        if (character.GetTournamentLegality())
                        {
                            <th class="@(Model.PlayerProfile.OpponentCharacterFilter == character ? "matchup-cell-colored-sticky" : "")" onmouseover="hoverColumn(@i)" onmouseout="unhoverColumn(@i)" onclick="filterToMatchup(null, '@character')"><img src="@character.GetStockIconPath()" /></th>
                        }
                    i++;
                    }
                </tr>
            </thead>
            <tbody>
                @{int row = 1;}
                @foreach (Character character in Model.PlayedCharacters)
                {
                    if (character.GetTournamentLegality())
                    {
                        <tr class="matchup-row @(Model.PlayerProfile.CharacterFilter == character && Model.PlayerProfile.OpponentCharacterFilter == null ? "matchup-cell-colored-sticky" : "")">
                            <td class="matchup-row-header" style="min-width: 27px;" onmouseover="hoverRow(@row)" onmouseout="unhoverRow(@row)" onclick="filterToMatchup('@character', null)">@Model.MatchupResults.Where(mr => mr.Character == character).Sum(mr => mr.GamesPlayed)</td>
                            <td class="matchup-row-header" onmouseover="hoverRow(@row)" onmouseout="unhoverRow(@row)" onclick="filterToMatchup('@character', null)"><img src="@character.GetStockIconPath()" /></td>
                            @{int col = 3;}
                            @foreach (Character opponentCharacter in Model.Characters)
                            {
                                if (opponentCharacter.GetTournamentLegality())
                                {
                                    <td class="matchup-cell @(
                                        (Model.PlayerProfile.CharacterFilter == character && Model.PlayerProfile.OpponentCharacterFilter == opponentCharacter)
                                        || (Model.PlayerProfile.CharacterFilter == null && Model.PlayerProfile.OpponentCharacterFilter == opponentCharacter)
                                        || (Model.PlayerProfile.CharacterFilter == character && Model.PlayerProfile.OpponentCharacterFilter == null)
                                        ? "matchup-cell-colored-sticky" : "")" id="@(character)-@(opponentCharacter)" onmouseover="hoverCell(@row, @col)" onmouseout="unhoverCell(@row, @col)" onclick="filterToMatchup('@character', '@opponentCharacter')" >@Model.MatchupResults.Where(mr => mr.Character == character && mr.OpponentCharacter == opponentCharacter).FirstOrDefault()?.GamesPlayed</td>
                                }
                            col++;
                            }
                        </tr>
                    }
                row++;
                }
            </tbody>
        </table>
    </div>
</div>

<table class="table-game-entry table-primary">
    <thead>
        <tr>
            <th class="align-left">Game Id</th>
            <th class="align-left"></th>
            <th class="align-center">Result</th>
            <th class="align-left"></th>
            <th class="align-left"></th>
            <th class="align-left"></th>
            <th class="align-left"></th>
            <th class="align-left">Stage</th>
            <th class="align-left">Date</th>
            <th class="align-left"></th>
            <th class="align-left" hidden>File Name</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Game game in Model.Entries.Take(50))
        {
            Player player1 = game.Players.Player1;
            Player player2 = game.Players.Player2;
            <tr class="game-entry">
                <td class="align-left">@game.Id</td>
                <td class="align-left"><button class="button" onclick="goToGame(@game.Id)">View</button></td>
                @if (((bool)game.Player1Victory && game.Player1Id == Model.Player.Id) || ((bool)game.Player2Victory && game.Player2Id == Model.Player.Id))
                {
                    <td class="result-victory align-left"></td>
                }
                else
                {
                    <td class="result-defeat align-left"></td>
                }
                @if (Model.Player.Id == game.Player1Id)
                {
                    <td class="align-center">@player1.Name</td>
                    <td class="align-left"><img class="stock-icon" src="@game.Character1?.GetStockIconPath()" />@game.Character1.GetDisplayName()</td>
                    <td class="align-left"><img class="stock-icon" src="@game.Character2?.GetStockIconPath()" />@game.Character2.GetDisplayName()</td>
                    <td class="align-left player-profile-opponent-name" onclick="goToProfile('@player2.Id')">@player2.Name (@player2.ConnectCode)</td>
                }
                else
                {
                    <td class="align-center">@player2.Name</td>
                    <td class="align-left"><img class="stock-icon" src="@game.Character2?.GetStockIconPath()" />@game.Character2.GetDisplayName()</td>
                    <td class="align-left"><img class="stock-icon" src="@game.Character1?.GetStockIconPath()" />@game.Character1.GetDisplayName()</td>
                    <td class="align-left player-profile-opponent-name" onclick="goToProfile('@player1.Id')">@player1.Name (@player1.ConnectCode)</td>
                }
                <td class="align-left"><img class="stage-icon" src="@game.Stage.GetStageIconPath()" />@game.Stage.GetDisplayName()</td>
                <td class="align-left">@game.StartAt.ToString("MM/dd/yy - HH:mm")</td>
                <td class="align-left">@game.GameMode?.GetDisplayName()</td>
                <td class="align-left" hidden>@game.FileName</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>

        function hoverRow(rowNum) {
            $(".table-matchups tbody tr:nth-child(" + rowNum + ")").addClass('matchup-cell-colored');
        }

        function unhoverRow(rowNum) {
            $(".table-matchups tbody tr:nth-child(" + rowNum + ")").removeClass('matchup-cell-colored');
        }

        function hoverColumn(colNum) {
            $(".table-matchups tr th:nth-child(" + colNum + ")").addClass('matchup-cell-colored');
            $(".table-matchups tr td:nth-child(" + colNum + ")").addClass('matchup-cell-colored');
        }

        function unhoverColumn(colNum) {
            $(".table-matchups tr th:nth-child(" + colNum + ")").removeClass('matchup-cell-colored');
            $(".table-matchups tr td:nth-child(" + colNum + ")").removeClass('matchup-cell-colored');
        }

        function hoverCell(rowNum, colNum) {
            $(".table-matchups tbody tr:nth-child(" + rowNum + ") td:nth-child(" + colNum + ")").addClass('matchup-cell-colored');
        }

        function unhoverCell(rowNum, colNum) {
            $(".table-matchups tbody tr:nth-child(" + rowNum + ") td:nth-child(" + colNum + ")").removeClass('matchup-cell-colored');
        }

        function hoverTable() {
            $(".table-matchups").find('*').addClass('matchup-cell-colored');
        }

        function unhoverTable() {
            $(".table-matchups").find('*').removeClass('matchup-cell-colored');
        }

        function clearFilter() {
            $("#characterFilter").val(null);
            $("#opponentCharacterFilter").val(null);
            $("#filterForm").submit();
        }

        function filterToMatchup(character, opponentCharacter) {
            $("#characterFilter").val(character);
            $("#opponentCharacterFilter").val(opponentCharacter);
            $("#filterForm").submit();
        }

        function goToProfile(id) {
            window.location.href = '/Player/Profile/' + id;
        }

        function goToGame(id) {
            window.location.href = '/Game/' + id
        }

    </script>
}